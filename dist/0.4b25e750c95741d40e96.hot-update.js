webpackHotUpdate(0,{

/***/ 96:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(37)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.taskDone {\\n    text-decoration: line-through;\\n}\\n.checkbox {\\n    /* margin: auto; */\\n    /* top: 7px; */\\n}\\n\\n\", \"\", {\"version\":3,\"sources\":[\"/home/mikefromru/django_apps/todo-django-vue/project/src/components/src/components/Home.vue\"],\"names\":[],\"mappings\":\";AAkGA;IACA,8BAAA;CACA;AAEA;IACA,mBAAA;IACA,eAAA;CACA\",\"file\":\"Home.vue\",\"sourcesContent\":[\"<template>\\n    <!-- <b-container> -->\\n    <div class=\\\"container col-sm-8 col-sm-offset-2\\\">\\n        <p>Welcome to Todo, {{ profile.username }} <a href @click=\\\"logout\\\">logout</a></p>\\n        <div class=\\\"panel\\\">\\n           \\n            <h2 class=\\\"text-center\\\">Add new task</h2>\\n\\n            <b-form inline @submit.prevent=\\\"add_todo\\\">\\n                    <b-input class=\\\"mb-2 mr-sm-2 mb-sm-0\\\" v-model=\\\"new_todo\\\" placeholder=\\\"Add a new todo\\\"></b-input>\\n                    <b-btn type=\\\"submit\\\">submit</b-btn>\\n            </b-form>\\n            \\n        </div>\\n\\n        <table class=\\\"table\\\">\\n            <thead>\\n                <th>Checkmark Done</th>\\n                <th>Completed</th>\\n                <th>Task name</th>\\n                <th>Delete</th>\\n            </thead>\\n\\n            <tbody>\\n                <tr v-for=\\\"x in name.slice().reverse()\\\" :key=\\\"x.id\\\">\\n                    <td>\\n                        <b-form-checkbox-group v-model=\\\"x.complete\\\">\\n                            <b-form-checkbox @input=\\\"set_bird(x)\\\" class=\\\"checkbox\\\" ></b-form-checkbox>\\n                        </b-form-checkbox-group>\\n                    </td>\\n                    <td>{{ x.complete }}</td>\\n                    <td><span> </span></td>\\n                    <td><b-btn variant=\\\"danger\\\" @click=\\\"delete_one_todo(x.id)\\\">delete</b-btn></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n    </div>\\n    <!-- </b-container> -->\\n</template>\\n\\n<script>\\nimport \\\"babel-polyfill\\\"\\nimport axios from 'axios'\\nimport { mapGetters } from 'vuex'\\nexport default {\\n    name: 'Home',\\n    data() {\\n        return {\\n            new_todo: '',\\n            complete: false,\\n        }\\n    },\\n    computed: mapGetters ({\\n        authStatus: 'authStatus',\\n        profile: 'profile',\\n        name: 'name'\\n    }),\\n    methods: {\\n        set_bird(x) {\\n            console.log(x.complete)\\n            if (x.complete[0] === true || x.complete === true) {\\n                axios.patch('/api/todo/' + x.id + '/', {'complete': true})\\n                .then(response => {\\n                })\\n            } else if(x.complete[0] !== true || x.complete === false){\\n                axios.patch('/api/todo/' + x.id + '/', {'complete': false})\\n                .then(response => {\\n                })\\n            }\\n        },\\n        delete_one_todo(id) {\\n            this.$store.dispatch('DELETE_ONE_TODO', id)\\n            this.$store.dispatch('GET_TODO')\\n        },\\n        async add_todo() {\\n            await this.$store.dispatch('ADD_TODO', {\\n                'name': this.new_todo,\\n                'user': this.profile.pk,\\n                'complete': this.complete\\n            }),\\n            this.new_todo = '',\\n            this.$store.dispatch('GET_TODO')\\n        },\\n        logout() {\\n           this.$store.dispatch('LOGOUT') \\n           this.$router.push({name: 'login'})\\n        }\\n    },\\n    created() {\\n        //this.get_todo()\\n        this.$store.dispatch('GET_TODO')\\n    }\\n}\\n</script>\\n\\n<style>\\n\\n.taskDone {\\n    text-decoration: line-through;\\n}\\n\\n.checkbox {\\n    /* margin: auto; */\\n    /* top: 7px; */\\n}\\n\\n</style>\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ib21lLnZ1ZT9hMjg5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUdBO0FBQ0Esc0NBQXVDLG9DQUFvQyxHQUFHLGFBQWEsc0JBQXNCLHFCQUFxQixNQUFNLFlBQVksOElBQThJLE1BQU0sV0FBVyxLQUFLLEtBQUssV0FBVyxVQUFVLHlLQUF5SyxvQkFBb0IsOGlDQUE4aUMsY0FBYyw2VkFBNlYsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixvRUFBb0UsT0FBTyw4QkFBOEIsNkZBQTZGLGtCQUFrQix1QkFBdUIsdUdBQXVHLDBEQUEwRCxpQkFBaUIsc0NBQXNDLG1CQUFtQixnQkFBZ0IseURBQXlELDBEQUEwRCxrQkFBa0Isc0NBQXNDLG1CQUFtQixnQkFBZ0IsV0FBVyxnQ0FBZ0Msa0hBQWtILDZCQUE2QixzREFBc0QsNElBQTRJLDRGQUE0RixxQkFBcUIsNEVBQTRFLGNBQWMsWUFBWSxPQUFPLGtCQUFrQiw0RUFBNEUsR0FBRyxxQ0FBcUMsb0NBQW9DLEdBQUcsZUFBZSxzQkFBc0IscUJBQXFCLE1BQU0sbUNBQW1DOztBQUU1aUgiLCJmaWxlIjoiOTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuLnRhc2tEb25lIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxufVxcbi5jaGVja2JveCB7XFxuICAgIC8qIG1hcmdpbjogYXV0bzsgKi9cXG4gICAgLyogdG9wOiA3cHg7ICovXFxufVxcblxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvaG9tZS9taWtlZnJvbXJ1L2RqYW5nb19hcHBzL3RvZG8tZGphbmdvLXZ1ZS9wcm9qZWN0L3NyYy9jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL0hvbWUudnVlXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCI7QUFrR0E7SUFDQSw4QkFBQTtDQUNBO0FBRUE7SUFDQSxtQkFBQTtJQUNBLGVBQUE7Q0FDQVwiLFwiZmlsZVwiOlwiSG9tZS52dWVcIixcInNvdXJjZXNDb250ZW50XCI6W1wiPHRlbXBsYXRlPlxcbiAgICA8IS0tIDxiLWNvbnRhaW5lcj4gLS0+XFxuICAgIDxkaXYgY2xhc3M9XFxcImNvbnRhaW5lciBjb2wtc20tOCBjb2wtc20tb2Zmc2V0LTJcXFwiPlxcbiAgICAgICAgPHA+V2VsY29tZSB0byBUb2RvLCB7eyBwcm9maWxlLnVzZXJuYW1lIH19IDxhIGhyZWYgQGNsaWNrPVxcXCJsb2dvdXRcXFwiPmxvZ291dDwvYT48L3A+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJwYW5lbFxcXCI+XFxuICAgICAgICAgICBcXG4gICAgICAgICAgICA8aDIgY2xhc3M9XFxcInRleHQtY2VudGVyXFxcIj5BZGQgbmV3IHRhc2s8L2gyPlxcblxcbiAgICAgICAgICAgIDxiLWZvcm0gaW5saW5lIEBzdWJtaXQucHJldmVudD1cXFwiYWRkX3RvZG9cXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGItaW5wdXQgY2xhc3M9XFxcIm1iLTIgbXItc20tMiBtYi1zbS0wXFxcIiB2LW1vZGVsPVxcXCJuZXdfdG9kb1xcXCIgcGxhY2Vob2xkZXI9XFxcIkFkZCBhIG5ldyB0b2RvXFxcIj48L2ItaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICA8Yi1idG4gdHlwZT1cXFwic3VibWl0XFxcIj5zdWJtaXQ8L2ItYnRuPlxcbiAgICAgICAgICAgIDwvYi1mb3JtPlxcbiAgICAgICAgICAgIFxcbiAgICAgICAgPC9kaXY+XFxuXFxuICAgICAgICA8dGFibGUgY2xhc3M9XFxcInRhYmxlXFxcIj5cXG4gICAgICAgICAgICA8dGhlYWQ+XFxuICAgICAgICAgICAgICAgIDx0aD5DaGVja21hcmsgRG9uZTwvdGg+XFxuICAgICAgICAgICAgICAgIDx0aD5Db21wbGV0ZWQ8L3RoPlxcbiAgICAgICAgICAgICAgICA8dGg+VGFzayBuYW1lPC90aD5cXG4gICAgICAgICAgICAgICAgPHRoPkRlbGV0ZTwvdGg+XFxuICAgICAgICAgICAgPC90aGVhZD5cXG5cXG4gICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgIDx0ciB2LWZvcj1cXFwieCBpbiBuYW1lLnNsaWNlKCkucmV2ZXJzZSgpXFxcIiA6a2V5PVxcXCJ4LmlkXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWNoZWNrYm94LWdyb3VwIHYtbW9kZWw9XFxcInguY29tcGxldGVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWNoZWNrYm94IEBpbnB1dD1cXFwic2V0X2JpcmQoeClcXFwiIGNsYXNzPVxcXCJjaGVja2JveFxcXCIgPjwvYi1mb3JtLWNoZWNrYm94PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWNoZWNrYm94LWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgIDx0ZD57eyB4LmNvbXBsZXRlIH19PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgIDx0ZD48c3Bhbj4gPC9zcGFuPjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICA8dGQ+PGItYnRuIHZhcmlhbnQ9XFxcImRhbmdlclxcXCIgQGNsaWNrPVxcXCJkZWxldGVfb25lX3RvZG8oeC5pZClcXFwiPmRlbGV0ZTwvYi1idG4+PC90ZD5cXG4gICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgPC90YWJsZT5cXG5cXG4gICAgPC9kaXY+XFxuICAgIDwhLS0gPC9iLWNvbnRhaW5lcj4gLS0+XFxuPC90ZW1wbGF0ZT5cXG5cXG48c2NyaXB0PlxcbmltcG9ydCBcXFwiYmFiZWwtcG9seWZpbGxcXFwiXFxuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xcbmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4J1xcbmV4cG9ydCBkZWZhdWx0IHtcXG4gICAgbmFtZTogJ0hvbWUnLFxcbiAgICBkYXRhKCkge1xcbiAgICAgICAgcmV0dXJuIHtcXG4gICAgICAgICAgICBuZXdfdG9kbzogJycsXFxuICAgICAgICAgICAgY29tcGxldGU6IGZhbHNlLFxcbiAgICAgICAgfVxcbiAgICB9LFxcbiAgICBjb21wdXRlZDogbWFwR2V0dGVycyAoe1xcbiAgICAgICAgYXV0aFN0YXR1czogJ2F1dGhTdGF0dXMnLFxcbiAgICAgICAgcHJvZmlsZTogJ3Byb2ZpbGUnLFxcbiAgICAgICAgbmFtZTogJ25hbWUnXFxuICAgIH0pLFxcbiAgICBtZXRob2RzOiB7XFxuICAgICAgICBzZXRfYmlyZCh4KSB7XFxuICAgICAgICAgICAgY29uc29sZS5sb2coeC5jb21wbGV0ZSlcXG4gICAgICAgICAgICBpZiAoeC5jb21wbGV0ZVswXSA9PT0gdHJ1ZSB8fCB4LmNvbXBsZXRlID09PSB0cnVlKSB7XFxuICAgICAgICAgICAgICAgIGF4aW9zLnBhdGNoKCcvYXBpL3RvZG8vJyArIHguaWQgKyAnLycsIHsnY29tcGxldGUnOiB0cnVlfSlcXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xcbiAgICAgICAgICAgICAgICB9KVxcbiAgICAgICAgICAgIH0gZWxzZSBpZih4LmNvbXBsZXRlWzBdICE9PSB0cnVlIHx8IHguY29tcGxldGUgPT09IGZhbHNlKXtcXG4gICAgICAgICAgICAgICAgYXhpb3MucGF0Y2goJy9hcGkvdG9kby8nICsgeC5pZCArICcvJywgeydjb21wbGV0ZSc6IGZhbHNlfSlcXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xcbiAgICAgICAgICAgICAgICB9KVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH0sXFxuICAgICAgICBkZWxldGVfb25lX3RvZG8oaWQpIHtcXG4gICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnREVMRVRFX09ORV9UT0RPJywgaWQpXFxuICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0dFVF9UT0RPJylcXG4gICAgICAgIH0sXFxuICAgICAgICBhc3luYyBhZGRfdG9kbygpIHtcXG4gICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnQUREX1RPRE8nLCB7XFxuICAgICAgICAgICAgICAgICduYW1lJzogdGhpcy5uZXdfdG9kbyxcXG4gICAgICAgICAgICAgICAgJ3VzZXInOiB0aGlzLnByb2ZpbGUucGssXFxuICAgICAgICAgICAgICAgICdjb21wbGV0ZSc6IHRoaXMuY29tcGxldGVcXG4gICAgICAgICAgICB9KSxcXG4gICAgICAgICAgICB0aGlzLm5ld190b2RvID0gJycsXFxuICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0dFVF9UT0RPJylcXG4gICAgICAgIH0sXFxuICAgICAgICBsb2dvdXQoKSB7XFxuICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnTE9HT1VUJykgXFxuICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7bmFtZTogJ2xvZ2luJ30pXFxuICAgICAgICB9XFxuICAgIH0sXFxuICAgIGNyZWF0ZWQoKSB7XFxuICAgICAgICAvL3RoaXMuZ2V0X3RvZG8oKVxcbiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0dFVF9UT0RPJylcXG4gICAgfVxcbn1cXG48L3NjcmlwdD5cXG5cXG48c3R5bGU+XFxuXFxuLnRhc2tEb25lIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxufVxcblxcbi5jaGVja2JveCB7XFxuICAgIC8qIG1hcmdpbjogYXV0bzsgKi9cXG4gICAgLyogdG9wOiA3cHg7ICovXFxufVxcblxcbjwvc3R5bGU+XFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/c291cmNlTWFwIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyP3tcInZ1ZVwiOnRydWUsXCJpZFwiOlwiZGF0YS12LThkYzdjY2UyXCIsXCJzY29wZWRcIjpmYWxzZSxcImhhc0lubGluZUNvbmZpZ1wiOmZhbHNlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vc3JjL2NvbXBvbmVudHMvSG9tZS52dWVcbi8vIG1vZHVsZSBpZCA9IDk2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///96\n");

/***/ })

})