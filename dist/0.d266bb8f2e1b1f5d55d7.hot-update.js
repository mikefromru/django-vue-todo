webpackHotUpdate(0,{

/***/ 96:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(37)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.taskDone {\\n    text-decoration: line-through;\\n}\\n.checkbox {\\n    /* margin: auto; */\\n    /* top: 7px; */\\n}\\n\\n\", \"\", {\"version\":3,\"sources\":[\"/home/mikefromru/django_apps/todo-django-vue/project/src/components/src/components/Home.vue\"],\"names\":[],\"mappings\":\";AAiGA;IACA,8BAAA;CACA;AAEA;IACA,mBAAA;IACA,eAAA;CACA\",\"file\":\"Home.vue\",\"sourcesContent\":[\"<template>\\n    <!-- <b-container> -->\\n    <div class=\\\"container col-sm-8 col-sm-offset-2\\\">\\n        <p>Welcome to Todo, {{ profile.username }} <a href @click=\\\"logout\\\">logout</a></p>\\n        <div class=\\\"panel\\\">\\n           \\n            <h2 class=\\\"text-center\\\">Add new task</h2>\\n\\n            <b-form inline @submit.prevent=\\\"add_todo\\\">\\n                    <b-input class=\\\"mb-2 mr-sm-2 mb-sm-0\\\" v-model=\\\"new_todo\\\" placeholder=\\\"Add a new todo\\\"></b-input>\\n                    <b-btn type=\\\"submit\\\">submit</b-btn>\\n            </b-form>\\n            \\n        </div>\\n\\n        <table class=\\\"table\\\">\\n            <thead>\\n                <th>Checkmark Done</th>\\n                <th>Completed</th>\\n                <th>Task name</th>\\n                <th>Delete</th>\\n            </thead>\\n\\n            <tbody>\\n                <tr v-for=\\\"x in name.slice().reverse()\\\" :key=\\\"x.id\\\">\\n                    <td>\\n                        <b-form-checkbox v-model=\\\"x.complete\\\" @input=\\\"set_bird(x)\\\" class=\\\"checkbox\\\" ></b-form-checkbox>\\n                    </td>\\n                    <td>{{ x.complete }}</td>\\n                    <td><span :class=\\\"{ taskDone: x.complete}\\\">{{ x.name }}</span></td>\\n                    <td><b-btn variant=\\\"danger\\\" @click=\\\"delete_one_todo(x.id)\\\">delete</b-btn></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n    </div>\\n    <!-- </b-container> -->\\n</template>\\n\\n<script>\\nimport \\\"babel-polyfill\\\"\\nimport axios from 'axios'\\nimport { mapGetters } from 'vuex'\\nexport default {\\n    name: 'Home',\\n    data() {\\n        return {\\n            new_todo: '',\\n        }\\n    },\\n    computed: mapGetters ({\\n        authStatus: 'authStatus',\\n        profile: 'profile',\\n        name: 'name',\\n\\n    }),\\n\\n    methods: {\\n        set_bird(x) {\\n            console.log(x.complete)\\n            // if (x.complete[0] === true || x.complete === true) {\\n            if (x.complete === true) {\\n                axios.patch('/api/todo/' + x.id + '/', {'complete': true})\\n                .then(response => {\\n                })\\n            } else if(x.complete === false){\\n                axios.patch('/api/todo/' + x.id + '/', {'complete': false})\\n                .then(response => {})\\n            }\\n        },\\n        delete_one_todo(id) {\\n            this.$store.dispatch('DELETE_ONE_TODO', id)\\n            this.$store.dispatch('GET_TODO')\\n        },\\n        async add_todo() {\\n            await this.$store.dispatch('ADD_TODO', {\\n                'name': this.new_todo,\\n                'user': this.profile.pk,\\n                'complete': this.complete\\n            }),\\n            this.new_todo = '',\\n            this.$store.dispatch('GET_TODO')\\n        },\\n        logout() {\\n           this.$store.dispatch('LOGOUT') \\n           this.$router.push({name: 'login'})\\n        }\\n    },\\n    created() {\\n        //this.get_todo()\\n        this.$store.dispatch('GET_TODO')\\n    }\\n}\\n</script>\\n\\n<style>\\n\\n.taskDone {\\n    text-decoration: line-through;\\n}\\n\\n.checkbox {\\n    /* margin: auto; */\\n    /* top: 7px; */\\n}\\n\\n</style>\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ib21lLnZ1ZT9hMjg5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUdBO0FBQ0Esc0NBQXVDLG9DQUFvQyxHQUFHLGFBQWEsc0JBQXNCLHFCQUFxQixNQUFNLFlBQVksOElBQThJLE1BQU0sV0FBVyxLQUFLLEtBQUssV0FBVyxVQUFVLHlLQUF5SyxvQkFBb0IsdThCQUF1OEIsY0FBYywrQ0FBK0Msc0JBQXNCLEtBQUssVUFBVSx1VEFBdVQsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixzQ0FBc0MsT0FBTyw4QkFBOEIsZ0dBQWdHLG9CQUFvQix1QkFBdUIsMEdBQTBHLHdDQUF3QywwREFBMEQsaUJBQWlCLHNDQUFzQyxtQkFBbUIsZ0JBQWdCLCtCQUErQiwwREFBMEQsa0JBQWtCLHVDQUF1QyxnQkFBZ0IsV0FBVyxnQ0FBZ0Msa0hBQWtILDZCQUE2QixzREFBc0QsNElBQTRJLDRGQUE0RixxQkFBcUIsNEVBQTRFLGNBQWMsWUFBWSxPQUFPLGtCQUFrQiw0RUFBNEUsR0FBRyxxQ0FBcUMsb0NBQW9DLEdBQUcsZUFBZSxzQkFBc0IscUJBQXFCLE1BQU0sbUNBQW1DOztBQUV6OUciLCJmaWxlIjoiOTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuLnRhc2tEb25lIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxufVxcbi5jaGVja2JveCB7XFxuICAgIC8qIG1hcmdpbjogYXV0bzsgKi9cXG4gICAgLyogdG9wOiA3cHg7ICovXFxufVxcblxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvaG9tZS9taWtlZnJvbXJ1L2RqYW5nb19hcHBzL3RvZG8tZGphbmdvLXZ1ZS9wcm9qZWN0L3NyYy9jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL0hvbWUudnVlXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCI7QUFpR0E7SUFDQSw4QkFBQTtDQUNBO0FBRUE7SUFDQSxtQkFBQTtJQUNBLGVBQUE7Q0FDQVwiLFwiZmlsZVwiOlwiSG9tZS52dWVcIixcInNvdXJjZXNDb250ZW50XCI6W1wiPHRlbXBsYXRlPlxcbiAgICA8IS0tIDxiLWNvbnRhaW5lcj4gLS0+XFxuICAgIDxkaXYgY2xhc3M9XFxcImNvbnRhaW5lciBjb2wtc20tOCBjb2wtc20tb2Zmc2V0LTJcXFwiPlxcbiAgICAgICAgPHA+V2VsY29tZSB0byBUb2RvLCB7eyBwcm9maWxlLnVzZXJuYW1lIH19IDxhIGhyZWYgQGNsaWNrPVxcXCJsb2dvdXRcXFwiPmxvZ291dDwvYT48L3A+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJwYW5lbFxcXCI+XFxuICAgICAgICAgICBcXG4gICAgICAgICAgICA8aDIgY2xhc3M9XFxcInRleHQtY2VudGVyXFxcIj5BZGQgbmV3IHRhc2s8L2gyPlxcblxcbiAgICAgICAgICAgIDxiLWZvcm0gaW5saW5lIEBzdWJtaXQucHJldmVudD1cXFwiYWRkX3RvZG9cXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGItaW5wdXQgY2xhc3M9XFxcIm1iLTIgbXItc20tMiBtYi1zbS0wXFxcIiB2LW1vZGVsPVxcXCJuZXdfdG9kb1xcXCIgcGxhY2Vob2xkZXI9XFxcIkFkZCBhIG5ldyB0b2RvXFxcIj48L2ItaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICA8Yi1idG4gdHlwZT1cXFwic3VibWl0XFxcIj5zdWJtaXQ8L2ItYnRuPlxcbiAgICAgICAgICAgIDwvYi1mb3JtPlxcbiAgICAgICAgICAgIFxcbiAgICAgICAgPC9kaXY+XFxuXFxuICAgICAgICA8dGFibGUgY2xhc3M9XFxcInRhYmxlXFxcIj5cXG4gICAgICAgICAgICA8dGhlYWQ+XFxuICAgICAgICAgICAgICAgIDx0aD5DaGVja21hcmsgRG9uZTwvdGg+XFxuICAgICAgICAgICAgICAgIDx0aD5Db21wbGV0ZWQ8L3RoPlxcbiAgICAgICAgICAgICAgICA8dGg+VGFzayBuYW1lPC90aD5cXG4gICAgICAgICAgICAgICAgPHRoPkRlbGV0ZTwvdGg+XFxuICAgICAgICAgICAgPC90aGVhZD5cXG5cXG4gICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgIDx0ciB2LWZvcj1cXFwieCBpbiBuYW1lLnNsaWNlKCkucmV2ZXJzZSgpXFxcIiA6a2V5PVxcXCJ4LmlkXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWNoZWNrYm94IHYtbW9kZWw9XFxcInguY29tcGxldGVcXFwiIEBpbnB1dD1cXFwic2V0X2JpcmQoeClcXFwiIGNsYXNzPVxcXCJjaGVja2JveFxcXCIgPjwvYi1mb3JtLWNoZWNrYm94PlxcbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgIDx0ZD57eyB4LmNvbXBsZXRlIH19PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgIDx0ZD48c3BhbiA6Y2xhc3M9XFxcInsgdGFza0RvbmU6IHguY29tcGxldGV9XFxcIj57eyB4Lm5hbWUgfX08L3NwYW4+PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgIDx0ZD48Yi1idG4gdmFyaWFudD1cXFwiZGFuZ2VyXFxcIiBAY2xpY2s9XFxcImRlbGV0ZV9vbmVfdG9kbyh4LmlkKVxcXCI+ZGVsZXRlPC9iLWJ0bj48L3RkPlxcbiAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICA8L3RhYmxlPlxcblxcbiAgICA8L2Rpdj5cXG4gICAgPCEtLSA8L2ItY29udGFpbmVyPiAtLT5cXG48L3RlbXBsYXRlPlxcblxcbjxzY3JpcHQ+XFxuaW1wb3J0IFxcXCJiYWJlbC1wb2x5ZmlsbFxcXCJcXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXFxuaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgICBuYW1lOiAnSG9tZScsXFxuICAgIGRhdGEoKSB7XFxuICAgICAgICByZXR1cm4ge1xcbiAgICAgICAgICAgIG5ld190b2RvOiAnJyxcXG4gICAgICAgIH1cXG4gICAgfSxcXG4gICAgY29tcHV0ZWQ6IG1hcEdldHRlcnMgKHtcXG4gICAgICAgIGF1dGhTdGF0dXM6ICdhdXRoU3RhdHVzJyxcXG4gICAgICAgIHByb2ZpbGU6ICdwcm9maWxlJyxcXG4gICAgICAgIG5hbWU6ICduYW1lJyxcXG5cXG4gICAgfSksXFxuXFxuICAgIG1ldGhvZHM6IHtcXG4gICAgICAgIHNldF9iaXJkKHgpIHtcXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh4LmNvbXBsZXRlKVxcbiAgICAgICAgICAgIC8vIGlmICh4LmNvbXBsZXRlWzBdID09PSB0cnVlIHx8IHguY29tcGxldGUgPT09IHRydWUpIHtcXG4gICAgICAgICAgICBpZiAoeC5jb21wbGV0ZSA9PT0gdHJ1ZSkge1xcbiAgICAgICAgICAgICAgICBheGlvcy5wYXRjaCgnL2FwaS90b2RvLycgKyB4LmlkICsgJy8nLCB7J2NvbXBsZXRlJzogdHJ1ZX0pXFxuICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcXG4gICAgICAgICAgICAgICAgfSlcXG4gICAgICAgICAgICB9IGVsc2UgaWYoeC5jb21wbGV0ZSA9PT0gZmFsc2Upe1xcbiAgICAgICAgICAgICAgICBheGlvcy5wYXRjaCgnL2FwaS90b2RvLycgKyB4LmlkICsgJy8nLCB7J2NvbXBsZXRlJzogZmFsc2V9KVxcbiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7fSlcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9LFxcbiAgICAgICAgZGVsZXRlX29uZV90b2RvKGlkKSB7XFxuICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0RFTEVURV9PTkVfVE9ETycsIGlkKVxcbiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdHRVRfVE9ETycpXFxuICAgICAgICB9LFxcbiAgICAgICAgYXN5bmMgYWRkX3RvZG8oKSB7XFxuICAgICAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0FERF9UT0RPJywge1xcbiAgICAgICAgICAgICAgICAnbmFtZSc6IHRoaXMubmV3X3RvZG8sXFxuICAgICAgICAgICAgICAgICd1c2VyJzogdGhpcy5wcm9maWxlLnBrLFxcbiAgICAgICAgICAgICAgICAnY29tcGxldGUnOiB0aGlzLmNvbXBsZXRlXFxuICAgICAgICAgICAgfSksXFxuICAgICAgICAgICAgdGhpcy5uZXdfdG9kbyA9ICcnLFxcbiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdHRVRfVE9ETycpXFxuICAgICAgICB9LFxcbiAgICAgICAgbG9nb3V0KCkge1xcbiAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0xPR09VVCcpIFxcbiAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goe25hbWU6ICdsb2dpbid9KVxcbiAgICAgICAgfVxcbiAgICB9LFxcbiAgICBjcmVhdGVkKCkge1xcbiAgICAgICAgLy90aGlzLmdldF90b2RvKClcXG4gICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdHRVRfVE9ETycpXFxuICAgIH1cXG59XFxuPC9zY3JpcHQ+XFxuXFxuPHN0eWxlPlxcblxcbi50YXNrRG9uZSB7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbn1cXG5cXG4uY2hlY2tib3gge1xcbiAgICAvKiBtYXJnaW46IGF1dG87ICovXFxuICAgIC8qIHRvcDogN3B4OyAqL1xcbn1cXG5cXG48L3N0eWxlPlxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3NvdXJjZU1hcCEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlcj97XCJ2dWVcIjp0cnVlLFwiaWRcIjpcImRhdGEtdi04ZGM3Y2NlMlwiLFwic2NvcGVkXCI6ZmFsc2UsXCJoYXNJbmxpbmVDb25maWdcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3NyYy9jb21wb25lbnRzL0hvbWUudnVlXG4vLyBtb2R1bGUgaWQgPSA5NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///96\n");

/***/ })

})