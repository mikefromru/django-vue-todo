{"version":3,"file":"index.js","sources":["../src/MockStorage.ts","../src/SimplePromiseQueue.ts","../src/index.ts"],"sourcesContent":["/**\n * Created by championswimmer on 22/07/17.\n */\nexport default class MockStorage implements Storage {\n  [index: number]: string;\n  [key: string]: any;\n\n  public get length(): number {\n    return Object.keys(this).length\n  }\n\n  public key(index: number): string | any {\n    return Object.keys(this)[index]\n  }\n\n  public setItem(key: string, data: any): void {\n    this[key] = data.toString()\n  }\n  public getItem(key: string): string {\n    return this[key]\n  }\n  public removeItem(key: string): void {\n    delete this[key]\n  }\n  public clear(): void {\n    for (const key of Object.keys(this)) {\n      delete this[key]\n    }\n  }\n}\n","// tslint:disable: variable-name\nexport default class SimplePromiseQueue {\n  private readonly _queue: Array<Promise<void>> = []\n  private _flushing = false\n\n  public enqueue(promise: Promise<void>) {\n    this._queue.push(promise)\n    if (!this._flushing) { return this.flushQueue() }\n    return Promise.resolve()\n  }\n\n  private flushQueue() {\n    this._flushing = true\n\n    const chain = (): Promise<void> | void => {\n      const nextTask = this._queue.shift()\n      if (nextTask) {\n        return nextTask.then(chain)\n      } else {\n        this._flushing = false\n      }\n    }\n    return Promise.resolve(chain())\n  }\n}\n","/**\n * Created by championswimmer on 18/07/17.\n */\nimport merge from 'lodash.merge'\nimport {Mutation, MutationPayload, Payload, Plugin, Store} from 'vuex'\nimport {AsyncStorage} from './AsyncStorage'\nimport MockStorage from './MockStorage'\nimport {PersistOptions} from './PersistOptions'\nimport SimplePromiseQueue from './SimplePromiseQueue'\n\nlet CircularJSON = JSON\n/**\n * A class that implements the vuex persistence.\n */\nexport class VuexPersistence<S, P extends Payload> implements PersistOptions<S> {\n  public asyncStorage: boolean\n  public storage: Storage | AsyncStorage\n  public restoreState: (key: string, storage?: AsyncStorage | Storage) => Promise<S> | S\n  public saveState: (key: string, state: {}, storage?: AsyncStorage | Storage) => Promise<void> | void\n  public reducer: (state: S) => {}\n  public key: string\n  public filter: (mutation: Payload) => boolean\n  public modules: string[]\n  public strictMode: boolean\n  public supportCircular: boolean\n\n  /**\n   * The plugin function that can be used inside a vuex store.\n   */\n  public plugin: Plugin<S>\n  /**\n   * A mutation that can be used to restore state\n   * Helpful if we are running in strict mode\n   */\n  public RESTORE_MUTATION: Mutation<S>\n  public subscribed: boolean\n\n  // tslint:disable-next-line:variable-name\n  private _mutex = new SimplePromiseQueue()\n\n  /**\n   * Create a {@link VuexPersistence} object.\n   * Use the <code>plugin</code> function of this class as a\n   * Vuex plugin.\n   * @param {PersistOptions} options\n   */\n  public constructor(options: PersistOptions<S>) {\n    this.key = ((options.key != null) ? options.key : 'vuex')\n\n    this.subscribed = false\n    this.supportCircular = options.supportCircular || false\n    if (this.supportCircular) {\n      CircularJSON = require('circular-json')\n    }\n\n    this.storage =\n      ((options.storage != null)\n        ? options.storage\n        : (typeof window === 'undefined')\n          ? (new MockStorage())\n          : window.localStorage\n      )\n\n    /**\n     * How this works is -\n     *  1. If there is options.reducer function, we use that, if not;\n     *  2. We check options.modules;\n     *    1. If there is no options.modules array, we use entire state in reducer\n     *    2. Otherwise, we create a reducer that merges all those state modules that are\n     *        defined in the options.modules[] array\n     * @type {((state: S) => {}) | ((state: S) => S) | ((state: any) => {})}\n     */\n    this.reducer = (\n      (options.reducer != null)\n        ? options.reducer\n        : (\n          (options.modules == null)\n            ? ((state: S) => state)\n            : (\n              (state: any) =>\n                (options.modules as string[]).reduce((a, i) =>\n                  merge(a, { [i]: state[i] }), {})\n            )\n        )\n    )\n\n    this.filter = (\n      (options.filter != null)\n        ? options.filter\n        : ((mutation) => true)\n    )\n\n    this.strictMode = options.strictMode || false\n\n    this.RESTORE_MUTATION = function RESTORE_MUTATION(state: S, savedState: any) {\n      const mergedState = merge({}, state, savedState)\n      for (const propertyName of Object.keys(mergedState)) {\n        (this as any)._vm.$set(state, propertyName, mergedState[propertyName])\n      }\n    }\n\n    this.asyncStorage = options.asyncStorage || false\n    const storageConfig = this.storage && ((this.storage) as any)._config\n    this.asyncStorage = this.asyncStorage || (storageConfig && storageConfig.name) === 'localforage'\n\n    if (this.asyncStorage) {\n\n      /**\n       * Async {@link #VuexPersistence.restoreState} implementation\n       * @type {((key: string, storage?: Storage) =>\n       *      (Promise<S> | S)) | ((key: string, storage: AsyncStorage) => Promise<any>)}\n       */\n      this.restoreState = (\n        (options.restoreState != null)\n          ? options.restoreState\n          : ((key: string, storage: AsyncStorage) =>\n              (storage ).getItem(key)\n                .then((value) =>\n                  typeof value === 'string' // If string, parse, or else, just return\n                    ? (\n                      this.supportCircular\n                        ? CircularJSON.parse(value || '{}')\n                        : JSON.parse(value || '{}')\n                    )\n                    : (value || {})\n                )\n          )\n      )\n\n      /**\n       * Async {@link #VuexPersistence.saveState} implementation\n       * @type {((key: string, state: {}, storage?: Storage) =>\n       *    (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\n       */\n      this.saveState = (\n        (options.saveState != null)\n          ? options.saveState\n          : ((key: string, state: {}, storage: AsyncStorage) =>\n              (storage).setItem(\n                key, // Second argument is state _object_ if localforage, stringified otherwise\n                (((storage && storage._config && storage._config.name) === 'localforage')\n                  ? merge({}, state)\n                  : (\n                      this.supportCircular\n                        ? CircularJSON.stringify(state) as any\n                        : JSON.stringify(state) as any\n                    )\n                )\n              )\n          )\n      )\n\n      /**\n       * Async version of plugin\n       * @param {Store<S>} store\n       */\n      this.plugin = (store: Store<S>) => {\n        ((this.restoreState(this.key, this.storage)) as Promise<S>).then((savedState) => {\n          /**\n           * If in strict mode, do only via mutation\n           */\n          if (this.strictMode) {\n            store.commit('RESTORE_MUTATION', savedState)\n          } else {\n            store.replaceState(merge(store.state, savedState))\n          }\n\n          this.subscriber(store)((mutation: MutationPayload, state: S) => {\n            if (this.filter(mutation)) {\n              this._mutex.enqueue(\n                this.saveState(this.key, this.reducer(state), this.storage) as Promise<void>\n              )\n            }\n          })\n          this.subscribed = true\n        })\n      }\n    } else {\n\n      /**\n       * Sync {@link #VuexPersistence.restoreState} implementation\n       * @type {((key: string, storage?: Storage) =>\n       *    (Promise<S> | S)) | ((key: string, storage: Storage) => (any | string | {}))}\n       */\n      this.restoreState = (\n        (options.restoreState != null)\n          ? options.restoreState\n          : ((key: string, storage: Storage) => {\n             const value = (storage).getItem(key)\n             if (typeof value === 'string') {// If string, parse, or else, just return\n                return (\n                  this.supportCircular\n                    ? CircularJSON.parse(value || '{}')\n                    : JSON.parse(value || '{}')\n                )\n             } else {\n               return (value || {})\n             }\n          })\n      )\n\n      /**\n       * Sync {@link #VuexPersistence.saveState} implementation\n       * @type {((key: string, state: {}, storage?: Storage) =>\n       *     (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\n       */\n      this.saveState = (\n        (options.saveState != null)\n          ? options.saveState\n          : ((key: string, state: {}, storage: Storage) =>\n              (storage).setItem(\n                key, // Second argument is state _object_ if localforage, stringified otherwise\n                (\n                  this.supportCircular\n                    ? CircularJSON.stringify(state) as any\n                    : JSON.stringify(state) as any\n                )\n              )\n          )\n      )\n\n      /**\n       * Sync version of plugin\n       * @param {Store<S>} store\n       */\n      this.plugin = (store: Store<S>) => {\n        const savedState = this.restoreState(this.key, this.storage) as S\n\n        if (this.strictMode) {\n          store.commit('RESTORE_MUTATION', savedState)\n        } else {\n          store.replaceState(merge(store.state, savedState))\n        }\n\n        this.subscriber(store)((mutation: MutationPayload, state: S) => {\n          if (this.filter(mutation)) {\n            this.saveState(this.key, this.reducer(state), this.storage)\n          }\n        })\n\n        this.subscribed = true\n      }\n    }\n  }\n\n  /**\n   * Creates a subscriber on the store. automatically is used\n   * when this is used a vuex plugin. Not for manual usage.\n   * @param store\n   */\n  private subscriber = (store: Store<S>) =>\n    (handler: (mutation: MutationPayload, state: S) => any) => store.subscribe(handler)\n}\n\nexport {\n  MockStorage, AsyncStorage, PersistOptions\n}\n\nexport default VuexPersistence\n"],"names":[],"mappings":"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"}